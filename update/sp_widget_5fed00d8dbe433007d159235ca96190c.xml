<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope, $http, $location, $window, $document) {
	var c = this;
	//$scope.tables = data.tables;
	//$scope.data.table = "All Tables"
	function get_browser() {
    var ua=navigator.userAgent,tem,M=ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i) || []; 
    if(/trident/i.test(M[1])){
        tem=/\brv[ :]+(\d+)/g.exec(ua) || []; 
        return {name:'IE',version:(tem[1]||'')};
        }   
    if(M[1]==='Chrome'){
        tem=ua.match(/\bOPR|Edge\/(\d+)/)
        if(tem!=null)   {return {name:'Opera', version:tem[1]};}
        }   
    M=M[2]? [M[1], M[2]]: [navigator.appName, navigator.appVersion, '-?'];
    if((tem=ua.match(/version\/(\d+)/i))!=null) {M.splice(1,1,tem[1]);}
    return {
      name: M[0],
      version: M[1]
    };
 }

var browser=get_browser(); // browser.name = 'Chrome'
                           // browser.version = '40'

console.log(browser);
	$scope.data.feedback += 'Browser: `' + browser.name + ' ' + browser.version + '`';
	//console.log($scope.data.feedback);
	$scope.table_name = ""
	/*
	{ 
	  table: incident,
		hits: n,
		results: [
		  {},
			{}
		]
	}
	*/
	$scope.setUrl = function(type) {
		$scope.loading = true;
		var updateUrl = "";
		if (type === "code") {
			updateUrl = "/code"+"?q"+"=" + $scope.term;
		} else {
			updateUrl = "/code"+"?q"+"=" + $scope.term + "&t=" + type;
		}
		$window.location = updateUrl;
	}
	$scope.setURLWithTable = function(table){
		console.log('...');
		$scope.table_name = table;
		$scope.setUrl('code');
	}
	$scope.getWorkflowStuff = function(table, response){
		var returnObj = {
			recordType: table.name,
			tableLabel: table.display,
			hits: response.result.hits.map(function(hit){})
		}
		return returnObj;
	}
	$scope.getResults = function(table, index, term){

		var endpoint = "/api/sn_codesearch/code_search/search?";
		endpoint += "search_group="+$scope.data.searchGroup+"&";
		endpoint += "term=" + term + "&";
		endpoint += "search_all_scopes=true";
		endpoint += "&table=" + table.name
		console.log(endpoint);
		$http.get(endpoint).success(function(response) {
			console.log((index+1), '/', $scope.data.tables.length);
			var count = index + 1;
			if(count === $scope.data.tables.length){
				$scope.data.loading = false;
			}
			if(response.result.hits){
				response.result.table = {};
				response.result.table.recordType = table.name;
				response.result.table.tableLabel = table.display;
				response.result.table.hits = response.result.hits;
				if(table.name == 'sys_variable_value'){
					response.result.hits.map(function(hit){


						var wfEndpoint = "";
						wfEndpoint += "/api/now/table/sys_variable_value/" + hit.sysId;
						wfEndpoint += "?sysparm_display_value=true&sysparm_fields=document_key"
						$http.get(wfEndpoint).success(function(wfResponse){
							try{
								console.log({sys_variable_value:wfEndpoint,response: wfResponse.result.document_key})

								if(typeof wfResponse != ""){
									var activityEndpoint = wfResponse.result.document_key.link;
									activityEndpoint += "?sysparm_display_value=true&sysparm_fields=workflow_version,workflow_version.published";
									$http.get(activityEndpoint).success(function(activityResponse){
										console.log({wfEndpoint: wfEndpoint,activityResponse:activityResponse});
										if(activityResponse[0] != '<'){
											if(activityResponse.result['workflow_version.published'] === "true"){//workflow_version.active
												hit.name = '\"' + wfResponse.result.document_key.display_value + '\" of ';
												hit.name += activityResponse.result.workflow_version.display_value;
												console.log(hit.name + " - "+ activityResponse.result['workflow_version.published']);
											}else{
												hit.name = 'inactive';
											}
											return hit;
										}
									});
								}
							}catch(e){console.log(e);}
						});


						$scope.hits++;
					});
				} else {
					response.result.hits.map(function(hit){
						$scope.hits++;
					});
				}
				$scope.data.results.push(response.result.table);
			}
		});
	};
	$scope.codeSearch = function() {
		$scope.search = "code";
		if ($scope.term) {
			$scope.hits = 0;
			console.log($scope.data.tables);
			$scope.data.tables.forEach(function(aTable, index){
				if($scope.data.table == aTable.name){
					console.log('one talbe', aTable);
				} else {
					console.log('query', aTable);
					if(aTable.name!=""){
						$scope.getResults(aTable, index, $scope.term);
					}
					if(index-1 === $scope.data.tables.length){
						$scope.data.loading = false;
						$scope.data.aTableindex = index;
					}
				}
			});
		}
	}
	$scope.setTable = function(table){
		if(table.name == ""){
			$scope.table = "All Tables";
			$scope.table_name = ""
		} else {
			$scope.table = table.calculated;
			$scope.table_name = table.name;
		}
	};
	// Update to work with URL parameters
	if($location.search().q){
		$scope.term = $location.search().q;
		if($scope.term.length>0){
			if($location.search().t){
				$scope.table_name = $location.search().t;
				$scope.table = $location.search().t
			}
			$scope.codeSearch();
		}
	}
}]]></client_script>
        <controller_as>c</controller_as>
        <css>#spinner{
  font-size:10em;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>code-search</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>code-search</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	data.tables = [{
		name: '',
		display: '',
		calculated: 'All Tables'
	}];
	data.results = [];
	data.loading = false;
	data.searchGroup = 'x_8821_code.default';
	data.table = $sp.getParameter('t') || null;
	data.term = $sp.getParameter('q') || null;
	//sys_app.do?sys_id=0f7b73c4dba433007d159235ca96197c
	var app = new GlideRecord('sys_app');
	if(app.get('0f7b73c4dba433007d159235ca96197c')){
		data.version = app.getValue('version');
	}
	data.feedbackBody = function(val){
		data.feedback += encodeURIComponent(val) + '%0A';
	}
	data.feedback = 'https://github.com/jacebenson/servicenow-code/issues/new/?body=';
	data.feedbackBody('#### The problem');
	data.feedbackBody('');
	data.feedbackBody('A clear and concised description of the issue.');
	data.feedbackBody('');
	data.feedbackBody('#### Envrionment');
	data.feedbackBody('');
	data.feedbackBody('code-search Version: `' + data.version + '`');
	data.feedbackBody('Buildtag: `' + gs.getProperty('glide.buildtag.last')+'`')
	//data.feedback += data.feedbackBody.join('%0A');
	var tables = new GlideRecord('sn_codesearch_table');
	//api/sn_codesearch/code_search/search?search_group=x_8821_code.default&term=KBWorkflow&search_all_scopes=true&table=sys_variable_value
	tables.addEncodedQuery('search_group.name=x_8821_code.default');
	tables.orderBy('table');
	tables.query();
	while(tables.next()){
		var tablesObj = {};
		tablesObj.name = tables.getValue('table');
		var documentation = new GlideRecord('sys_documentation');
		documentation.addQuery('name', tables.getValue('table'));
		documentation.addQuery('element','')
		documentation.addQuery('language','en');
		documentation.setLimit(1);
		documentation.query();
		if(documentation.next()){
			tablesObj.display = documentation.getValue('label');
			tablesObj.calculated = documentation.getValue('label') + ' ['+tables.getValue('table')+']';
		}
		data.tables.push(tablesObj)
	}
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>jacebenson</sys_created_by>
        <sys_created_on>2019-03-28 06:58:01</sys_created_on>
        <sys_id>5fed00d8dbe433007d159235ca96190c</sys_id>
        <sys_mod_count>139</sys_mod_count>
        <sys_name>code-search</sys_name>
        <sys_package display_value="Code" source="x_8821_code">0f7b73c4dba433007d159235ca96197c</sys_package>
        <sys_policy/>
        <sys_scope display_value="Code">0f7b73c4dba433007d159235ca96197c</sys_scope>
        <sys_update_name>sp_widget_5fed00d8dbe433007d159235ca96190c</sys_update_name>
        <sys_updated_by>jacebenson</sys_updated_by>
        <sys_updated_on>2020-11-20 16:33:40</sys_updated_on>
        <template><![CDATA[<div class="panel panel-primary">
  <div class="panel-heading">
    <h3 class="panel-title">
      ${Code Search}
      <span class="small">{{data.version}}</span>
    </h3>
  </div>
  <div class="panel-body col-12">
    <form class="form-horizontal">
      <fieldset>
        <!-- Form Name -->
        <!--<legend>Form Name</legend>-->
        <div class="row">
          <div class="col-sm-10">
            <!-- Search input-->

            <div class="form-group">
              <!--<label class="col-md-4 control-label" for="textinput">Text Input</label>  -->
              <div class="col-md-12">
                <input id="searchinput" 
                       name="searchinput" 
                       type="text" 
                       placeholder="GlideDateTime" 
                       class="form-control input-md"
                       ng-model="term" />
              </div>
            </div>
          </div>
          <div class="col-sm-2">
            <!-- Button -->
            <div class="form-group">
              <!--<label class=\"col-md-4 control-label\" for=\"button1id\">Double Button</label>-->
              <div class="col-md-4">
              </div>
              <div class="col-md-8">
                <button id="button1id" 
                        name="button1id" 
                        class="btn btn-success"
                        ng-click="setUrl('code')"
                        ><i class="glyphicon glyphicon-search\" aria-hidden="true"></i> Search</button>
              </div>
            </div>
          </div>
        </div>
      </fieldset>
      <div class="row">
        <div class="text-center">
          <span class="small">
            Version: {{data.version}}
          </span>
          -
          <span class="small">
            <a target="_blank" ng-href="{{data.feedback}}">Feedback</a>
          </span>
        </div>

      </div>
    </form>
  </div>
</div>
<div class="panel panel-default" ng-if="data.loading">
  <div class="text-center">
    <h1 ng-if="search==='code'">
      Searching code...  
    </h1>
    <div class="fa fa-spinner fa-spin" id="spinner"></div>
  </div>
</div>
<div class="panel panel-default" ng-if="data.results.length>0 && !data.loading">
  <h1 class="text-center">
    <div ng-if="hits>0 && search === 'code'">
      {{hits}} Matches
    </div>
    <div ng-if="hits === 0">
      No Matches Found
    </div>
  </h1>
  <div class="panel-body">
    <div ng-if="search!=='sysid'" ng-repeat="table in data.results">
      <div class="row container" ng-if="table.hits.length>0">
        <p>
          <a href="#{{table.recordType}}">{{table.recordType}} has {{table.hits.length}} matching records.</a>
        </p>
      </div>
    </div>
    <div ng-repeat="table in data.results">
      <div class="row" id="{{table.recordType}}" ng-if="table.hits.length>0">
        <h1 class="text-center">
          {{table.tableLabel}} <span class="text-muted">[{{table.recordType}}]</span>
        </h1>
      </div>
      <div class="row" ng-if="table.hits.length>0">
        <div class="row container" ng-repeat="hit in table.hits">
          <div class="col-sm-2">
            <a ng-href="{{hit.className}}.do?sys_id={{hit.sysId}}" target="_blank">{{hit.name}}</a>
          </div>
          <div class="col-sm-10">
            <div ng-repeat="match in hit.matches"> 
              <pre><code class="javascript"><span ng-repeat="context in match.lineMatches"><span>Line {{context.line}}</span>: <span>{{context.context}}</span><br/></span></code></pre> 
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>]]></template>
    </sp_widget>
</record_update>
